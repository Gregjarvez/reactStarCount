import React from  "react";const Star = (props) => {    function hightlight(id) {        return props.on(id)    }        return (        <span>            <i                className={props.onstate ? "fa fa-star star--rating on": "fa fa-star star--rating"}                onMouseEnter={() => hightlight(props.id)}                onMouseLeave={() => props.onMouseOut()}                onClick={() => props.onStarClick(props.id)}            ></i>        </span>    );};class App extends React.PureComponent {    constructor(props) {        super(props);        this.state = {            currentlySelected: 0,            starCount: 5,            switches: new Array(5).fill(0)        }        this.onStarHover = this.onStarHover.bind(this);        this.onMouseOut = this.onMouseOut.bind(this);        this.onStarClick = this.onStarClick.bind(this);    }    onStarHover(id) {        let switches, starTobehighlighted;        if (id < this.state.currentlySelected) return !1;        starTobehighlighted = this.state.switches;        switches = starTobehighlighted.map((el, index) => index <= id ? 1 : 0);        console.log(switches);        return this.setState({switches})    }        onStarClick(id){        if(id === 0 && this.state.currentlySelected === 0) return this.setState({currentlySelected : -1});        return this.setState({currentlySelected: id})    }        onMouseOut(){        let switches, starTobehighlighted;        starTobehighlighted = this.state.switches;        switches = starTobehighlighted.map((el, index) => index <= this.state.currentlySelected ? 1 : 0);        return this.setState({switches})    }    render() {        const list = this.state.switches.map((star, index) => {            return (<Star                    key={index}                    id={index}                    on={this.onStarHover}                    onstate={this.state.switches[index]}                    onMouseOut={this.onMouseOut}                    onStarClick={this.onStarClick}                />            )        });        return (            <div className="container">                {list}            </div>        )    }}export default App;